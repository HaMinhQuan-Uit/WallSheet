<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>